decision:
  en: "You wake up in the future where quantum computing has become a normal part of life."
prompt:
  en: "You wake up in the future where quantum computing has become a normal part of life. Interact with people in this new world and complete quests to learn how it works."
  de: "Du wachst in der Zukunft auf, wo Quantencomputing ein normaler Teil des Lebens geworden ist. Interagiere mit Menschen in dieser neuen Welt und löse Aufgaben, um zu lernen, wie es funktioniert."
npcs:
  mayor:
    name:
      en: "Computer Center Technician"
    spawn: { x: 4003, y: 743 }
    dialogue:
    - type: sequence
      items:
        - text:
            en: "type type type"
  robot:
    name:
      en: "Barista"
    spawn: { x: 245, y: 750 }
    dialogue:
      - type: random
        items:
          - text:
              en: "I love working here because I'm surrounded by my favorite snacks all day."
          - text:
              en: "Qroissant Qroissant Qroissant"
          - text:
              en: "Qoffee Qoffee Qoffee"
  citizenBraid:
    name:
      en: "Local Student"
    spawn: { x: 774, y: 767 }
    dialogue:
      - text:
          en: "I want to fill my brain with knowledge!"
  citizenHoodie:
    name:
      en: "Local Resident"
    spawn: { x: 2930, y: 830 }
    cond: 'quest.delivery.active & spoke.to.doorman & understood.grover.search & passed.grover.search.quiz'
    dialogue:
      - text:
          en: "I live in this wonderful quantum world."
  citizenPunk:
    name:
      en: "Post-Office Clerk"
    spawn: { x: 2400, y: 700 }
    dialogue:
      - text:
          en: "I handle all the mail around here."
        set: [ 'op.love.2' ]
  citizenPuan:
    name:
      en: "Banker"
    spawn: { x: 1522, y: 700 }
    dialogue:
      - text:
          en: "You can trust me with your money."
  citizenBlue:
    name:
      en: "Retired Scientist"
    type: citizenAqua
    spawn: { x: 5128, y: 658 }
    dialogue:
      - text:
          en: "I am very wise in the ways of all things quantum."
  dogTan:
    name:
      en: "Emmy"
    spawn: { x: 5893, y: 719 }
    dialogue:
      - text:
          en: "Woof!"
  lawyer:
    name:
      en: "Doorman"
    spawn: { x: 2832, y: 829 }
    dialogue:
      - text:
          en: "I take care of this huuuge apartment building."
quests:
  delivery:
    npc: citizenPunk
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "We’ve got a premium express package for the apartment complex down the street that must be delivered today, but our staff all called in sick. Could you help me out, please? "
              responses:
                - text:
                    en: "Sure, I can help out."
                  thenText:
                    en: "Thank you so much! Just so you know, the package only has a name, and no apartment number, but I'm sure you can figure it out."
                  set: [ 'quest.delivery.active' ]
                - text:
                    en: "Sorry, I don’t have time to help right now."
                  thenText:
                    en: "I understand. Please come back if you're free later!"
    stages:
      - cond: '^spoke.to.doorman & ^understood.grover.search & ^passed.grover.search.quiz'
        prompt:
          en: "Find the apartment complex and speak to the doorman."
        #target: lawyer
        dialogues:
          citizenPunk:
            - type: sequence
              items:
                - text:
                    en: "I think the building is quite close, right next door actually."
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "Hey there. Delivering something? Just so you know, for the privacy of our residents, our mailboxes are labeled only by apartment numbers, not names."
                - text:
                    en: "Do you know which apartment you're delivering to?"
                  responses:
                    - text:
                        en: "The fanciest one."
                      thenText:
                        en: "I'm not sure which that is, but if you have a name, I could probably help you out."
                      then: search-algorithm-choice
                    - text:
                        en: "Oh no, I only have a name."
                      then: search-algorithm-choice
            - id: search-algorithm-choice
              type: sequence
              items:
                - text:
                    en: "I have 3 buttons I could press to run different search algorithms for you, but some may take much longer than others."
                - text:
                    en: "Can you find out which is the best choice and tell me what it's called?"
                  responses:
                    - text:
                        en: "Yes! A new pursuit of knowledge awaits me!"
                      thenText:
                        en: "Great attitude! I'm sure you'll figure it out. I've heard there's a quantum computing expert who likes to go fishing by the lake in the forest at the edge of town."
                      set: ['spoke.to.doorman']
                    - text: 
                        en: "I have no idea where to start..."
                      thenText:
                        en: "That's okay! I've heard there's a quantum computing expert who likes to go fishing by the lake in the forest at the edge of town. Maybe she could help?"
                      set: ['spoke.to.doorman']
      - cond: 'spoke.to.doorman & ^understood.grover.search & ^passed.grover.search.quiz'
        prompt:
          en: "Find someone to help you choose a suitable algorithm."
        #target: citizenBlue
        dialogues:
          citizenBlue:
            - type: sequence
              items:
                - text:
                    en: "Hey there, you look stressed, can I help you?"
                  responses:
                    - text:
                        en: "Yes, can I get a Qoffee?"
                      then: qoffee-response
                    - text:
                        en: "Yes, I'm trying to learn about a search algorithm."
                      then: grover-explanation  
            - id: qoffee-response  
              type: sequence
              items:
                - text:
                   en: "The Qafé down the street has great Qoffee, but I can awaken your mind with quantum computing knowledge if you're interested."
                  responses:
                    - text:
                        en: "Yes please! I am looking for an efficient search algorithm."
                        then: grover-explanation
                    - text:
                        en: "I'd rather get a Qoffee..."
                      thenText: "...but you look like you're searching for something... Let me tell you a bit about the history of how we search!"
                      then: grover-explanation
            - id: grover-explanation  
              type: sequence
              items:
                - text:
                    en: "Long ago, we had various algorithms to search through unsorted data. For example, we could check every element one by one."
                - text:
                    en: "But if we had 10,000 pieces of data, that could take 10,000 checks..."
                - text:
                    en: "One day, Lov Grover found a way to sort through data much faster using a quantum computer."
                - text:
                    en: "If we had 10,000 pieces of data, we would only need a maximum of 100 checks using Grover's search algorithm. We call this 'quadratic' speedup."
                  responses:
                    - text:
                        en: "Thanks! This sounds perfect for my delivery quest."
                      set: [ 'understood.grover.search' ]
                    - text:
                        en: "Can you remind me where I can get a Qoffee?"
                      thenText: "Yes, at the Qafé down the street. But I hope you'll stop to deliver your package along the way!"
                      set: [ 'understood.grover.search' ]
      - cond: 'spoke.to.doorman & understood.grover.search & ^passed.grover.search.quiz'
        prompt:
          en: "Help the doorman choose the right algorithm."
        #target: lawyer
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "You're back! And you look like you went on an enlightening journey."
                  then: algorithm-question
            - id: algorithm-question
              type: sequence
              items:
                - text:
                    en: "So, what kind of search do you think would be most efficient?"
                  responses:
                    - text:
                        en: "A smart dog sniffing the package and leading us the right way."
                      thenText:
                        en: "I love this idea, but I'm terribly allergic..."
                      then: algorithm-question
                    - text:
                        en: "Checking each element one by one."
                      thenText:
                        en: "I don't think that's quite right, there must be a more efficient way..."
                      then: algorithm-question
                    - text:
                        en: "A quantum algorithm called Grover's Search"
                      thenText:
                        en: "Nice! Seems like you did your research."
                      then: quiz-grover
            - id: quiz-grover
              type: first
              items:
                - text:
                    en: "Do you know how much faster Grover's search will be than just checking through unsorted data one by one?"
                  responses:
                    - text:
                        en: "It checks every option simultaneously."
                      thenText:
                        en: "A lot of people think that! But it actually works a little differently..."
                      then: quiz-grover
                    - text:
                        en: "A quadratic speedup, 10,000 pieces of data only requires 100 checks!"
                      thenText:
                        en: "Nice! I'll run the search for you now. The recipient of your package should come down in a second."
                      set: [ 'passed.grover.search.quiz' ]
      - cond: 'spoke.to.doorman & understood.grover.search & passed.grover.search.quiz'
        prompt:
          en: "Deliver the package!"
        target: citizenHoodie
        dialogues:
          citizenHoodie:
            - type: sequence
              items:
                - text:
                    en: "I hear you have a package for me! I'm quite excited to open it, because it's entangled with a package my friend has."
                - text:
                    en: "Do you know what entanglement is?"
                  responses:
                    - text:
                        en: "When a ball of yarn has lots of knots in it."
                      thenText:
                        en: "Haha, I hope that's not what's in my box..."
                      then: entanglement-explanation
                    - text:
                        en: "When the states of two objects are connected, even when far apart"
                      thenText:
                        en: "You really know your stuff! Exactly right, when I open this box, I'll instantly know something about what's in my friend's box."
                      then: cupcake
                    - text: 
                        en: "I don't know, can you explain?"
                      then: entanglement-explanation
            - id: entanglement-explanation
              type: sequence
              items:
                - text:
                    en: "Imagine you have two magic dice. Whenever you roll them, they always land on the same number — if one lands on a 6, the other will too, no matter how far apart they are." 
                - text:
                    en: "You could roll one in New York and the other in Tokyo, and they’d still match every time."
                - text:
                    en: "In real life, this sounds impossible. But in quantum physics, something like this really does happen with tiny particles, like electrons or photons, even when they're light years apart."
                  then: cupcake
            - id: cupcake
              type: sequence
              items:
                - text:
                   en: "In my specific case of entanglement, we got two beautiful pink cupcakes, one with strawberry filling, one with tuna fish. As soon as I bite into mine, I'll know the fate of my friend too."
                - text:
                    en: "Do you want to take the first bite?"
                  responses:
                    - text:
                        en: "No, I'd like to avoid the risk of a tuna fish cupcake..."
                      thenText: 
                        en: "*munch* Your loss! This strawberry cupcake is delicious. I should get a tuna-fish-furious call from my friend any minute now... Thanks for the delivery!"
                      set: [ 'quest.delivery.done', 'pnt.love.delivery' ]
                    - text:
                        en: "Yes, please!"
                      thenText: 
                        en: "From the look on your face, seems like we got lucky! A delicious strawberry cupcake for us, and my friend should be munching on tuna any minute now... Thanks for the delivery!"
                      set: [ 'quest.delivery.done', 'pnt.love.delivery' ]
  computer:
    npc: mayor
    mood: interrogation
    # required: simulation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "You taught me a quantum computer would be perfect for my simulation, but I don't have access to one, can you help me?"
              responses:
                - text:
                    en: "Sure, I think I know who to ask."
                  thenText:
                    en: "Thank you! I bet the computer center down the road can offer some help."
                  set: [ 'quest.computer.active' ]
                - text:
                    en: "No, sorry, I'm very busy trying to buy a Qroissant right now."
                  thenText:
                    en: "I understand, that sounds urgent, Qroissants are essential to well-being. You can come back later anytime!"
    stages:
      - cond: '^found.computer & ^circuit.basic & ^circuit.explanation'
        prompt:
          en: "Ask for access to a quantum computer."
        target: mayor
        dialogues:
          mayor:
            - type: sequence
              items:
                - text:
                    en: "Sure, I have a quantum computer, but you'll need to prove that you're qualified to operate this tech."
                - text:
                    en: "Come back when you can tell me about quantum circuits."
                  set: ['found.computer']
      - cond: 'found.computer & ^circuit.basic & ^circuit.explanation'
        prompt:
          en: "Find someone to teach you about quantum circuits."
        target: citizenBlue
        dialogues:
          citizenBlue:
            - type: sequence
              items:
                - text: 
                    en: "Circuits? Certainly, I've got some knowledge to share. A circuit is like a recipe."
                - text:
                    en: "It takes ingredients, puts them through a series of steps, and gives you a final dish."
                - text:
                    en: "The Qafé has fantastic recipes for tasty Qroissants and Qookies, I bet they could help explain this."
                  set: ['circuit.basic']
      - cond: 'found.computer & circuit.basic & ^circuit.explanation'
        prompt:
          en: "Ask baker about how circuits are like recipes."
        target: robot
        dialogues:
          robot:
            - type: sequence
              items:
                - text:
                    en: "Oh I love circuits! They remind me of my daily early morning baking routine."
                - text:
                    en: "First, I gather my ingredients, flour, sugar, butter, chocolate chips..."
                  responses:
                    - text:
                        en: "This is making me hungry, can I have a Qookie?"
                      then: cookie-analogy
                    - text:
                        en: "What would the ingredients be in a quantum computer?"
                      then: cookie-analogy
            - id: cookie-analogy
              type: sequence
              items:
                - text:
                    en: "Haha this explanation is making me hungry, let's both have a Qookie."
                - text:
                    en: "In a quantum computer, the ingredients for the recipe would be qubits."
                - text:
                    en: "Then, beating the eggs, folding in the flour, that's all replaced with operations we call 'gates.'"
                - text:
                    en: "And in the end, by passing our qubits through a series of gates, we have transformed our original ingredients into a desirable Qookie! --uh, I mean, a mathematical ouput..."
                  responses:
                    - text:
                        en: "What kind of transformations happen inside a quantum computer?"
                      thenText:
                        en: "Ah, great question, I'm not an expert on quantum gates, but I think there's one nearby who can tell you."
                      set: ['circuit.explanation']
                    - text:
                        en: "Can I have another Qookie?"
                      thenText:
                        en: "Ha I'm going to limit you to one free Qookie today, but if you want to learn more about quantum gates and circuits, I think there's an expert nearby."
                      set: ['circuit.explanation']
      - cond: 'found.computer & circuit.basic & circuit.explanation'
        prompt:
          en: "Tell the computer technician what you learned about quantum circuits."
        target: mayor
        dialogues:
          mayor:
            - type: sequence
              items:
                - text:
                    en: "You're back! Can you tell me what a quantum circuit is?"
                  responses:
                    - text:
                        en: "A recipe which takes qubits and transforms their states."
                      thenText:
                        en: "Yes, nice analogy! I can tell you a bit more about the technical details."
                      then: gates-explanation
                    - text:
                        en: "When you spin around really fast."
                      thenText: 
                        en: "Um, that doesn't sound quite right, but maybe I can explain an example to help you understand."
                      then: gates-explanation
            - id: gates-explanation
              type: sequence
              items:
                - text:
                    en: "One gate that we use in both classical and quantum computing is called the 'NOT' gate"
                - text:
                    en: "When we pass a bit, or a qubit, through this gate, it switches the state, from 0 to 1, or from 1 to 0."
                  responses:
                    - text:
                        en: "Can we use a special gate that creates superposition?"
                      then: quantum-gates
                    - text:
                        en: "Like flipping a coin?"
                      thenText:
                        en: "Yes! But qubits can be in more than just a 'heads' or 'tails' state like a coin, remember superposition?"
                      then: quantum-gates     
            - id: quantum-gates             
              type: sequence
              items:
                - text:
                    en: "The 'Hadamard' gate takes a qubit in a basic state of 0 or 1, and changes it to a superposition of both states, where the qubit has equal probability of being measured as 0 or 1."
                - text:
                    en: "And, if we apply this gate twice, we get back to where we started."
                - text:
                    en: "So, if we had a qubit already in superposition, and apply the Hadamard gate, now we have a basic state that we can apply the classical NOT gate to."
                - text:
                    en: "Before I let you use this quantum computer, tell me, if I start with a qubit in a 0 state, and apply Hadamard, Hadamard, NOT, what will I get?"
                  responses:
                    - text:
                        en: "A qubit in state 1"
                      thenText:
                        en: "Nice! Alright, you can run your friend's simulation on my machine. Good luck!"    
                      set: ['quest.computer.done', 'pnt.love.computer']
                    - text:
                        en: "100€"
                      thenText:
                        en: "Not quite, we'll land in state 1. But oh- what's this? I don't usually accept bribes, but... Ok, you can run your friend's simulation on my machine. Good luck!"
                      set: ['quest.computer.done', 'pnt.love.computer']
                    - text:
                        en: "A qubit in state 0, same as the start."
                      thenText:
                        en: "Not quite, we'll land in state 1. But oh- what's this? A Qookie? I don't usually accept bribes, but this is so tasty... Ok, you can run your friend's simulation on my machine. Good luck!"
                      set: ['quest.computer.done', 'pnt.love.computer']
  simulation:
    npc: citizenBraid
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "I'm trying to create a chemical simulation, but I added one extra electron, and my computer froze. Can you help me?"
              responses:
                - text:
                    en: "Yes!"
                  thenText:
                    en: "Thank you! I saw a computer center down the road, maybe they can help?"
                  set: [ 'quest.simulation.active' ]
                - text:
                    en: "Can’t right now. I’m in the middle of a staring contest with a robot."
                  thenText:
                    en: "Oh, good luck! Please come back later after you win your staring contest!"
    stages:
      - cond: '^visit.computer.center & ^qubit.intro & ^learn.superposition'
        prompt:
          en: "Visit the computer center."
        #target: mayor
        dialogues:
          robot:
            - type: sequence
              items:
                - text:
                    en: "I can offer you Qoffee or Qroissants, but I can't help with your simulation. Maybe try the computer technician down the road?"
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "I think the computer center is down the road past the big apartment building. It looks like a huge glass dome."
          citizenPuan:
            - type: sequence
              items:
                - text:
                    en: "The computer center? It's just down the road, past the big apartment building. It looks like a huge glass dome."
          citizenPunk:
            - type: sequence
              items:
                - text:
                    en: "The computer center? It's just down the road, past the big apartment building. It looks like a huge glass dome."
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "The computer center? It's right next door. It looks like a huge glass dome."
          mayor:
            - type: sequence
              items:
                - text:
                    en: "Ah your friend is trying to simulate a quantum system with a classical computer..."
                - text:
                    en: "In a classical computer, information is stored and processed using billions of tiny switches called bits that can each be set to on or off (0 or 1)."
                - text:
                     en: "But, the basic unit of information in a quantum computer (a qubit) doesn't have this constraint, it can be in a superposition of 0 and 1 at the same time."
                  responses:
                    - text:
                        en: "How can it be 0 and 1 at the same time?"
                      thenText:
                        en: "You seem like a smart egg. Do a bit of research, I bet you can figure it out. If you’re lost, maybe a stroll in the forest will help."
                      set: ['visit.computer.center'] 
                    - text:
                        en: "What is a quantum system?"
                      then: electrons-example
            - id: electrons-example
              type: sequence
              items:
                - text:
                    en: "An example of a quantum system is a group of electrons interacting in a molecule."
                - text:
                    en: "Try to do a bit of research to find out why qubits help us simulate this situation."
                - text:
                    en: "If you don't know where to start, I've heard that there's a retired scientist who likes to relax at the park and talk quantum."
                  set: ['visit.computer.center']          
      - cond: 'visit.computer.center & ^qubit.intro & ^learn.superposition'
        prompt:
          en: "Find someone to explain superposition."
        #target: citizenBlue
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "The park is in the other direction, at the edge of town."
          citizenPunk:
            - type: sequence
              items:
                - text:
                    en: "The park? Just follow the road to the edge of town."
          citizenPuan:
            - type: sequence
              items:
                - text:
                    en: "The park? Just follow the road to the edge of town."
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "The park? Just follow the road to the edge of town."
          robot:
            - type: sequence
              items:
                - text:
                    en: "The park? Just follow the road to the edge of town."
          citizenBlue:
            - type: sequence
              items:
                - text:
                    en: "You want to know about superposition? Certainly! The state of a qubit is encoded by two numbers, like two coordinates for a point on a map."
                - text:
                    en: "Before the qubit is measured, it has some chance of being 0, and some other chance of being 1."
                - text:
                    en: "These two probabilities add to 100%. The only possible values are 0 or 1, but until we measure it, nobody knows the state, and it exists in ‘superposition’."
                  responses:
                    - text:
                        en: "Sounds impossible."
                      thenText:
                        en: "I understand your doubt! But I promise it's real. Try talking to the computer technician to dive deeper."
                      set: [ 'qubit.intro' ]
                    - text:
                        en: "How could that be useful?"
                      thenText:
                        en: "I understand your doubt! But I promise it's real. Try talking to the computer technician to dive deeper."
                      set: [ 'qubit.intro' ]
      - cond: 'visit.computer.center & qubit.intro & ^learn.superposition'
        prompt:
          en: "Go back to the computer technician."
        #target: mayor
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "The computer center? It's right next door."
          citizenPunk:
            - type: sequence
              items:
                - text:
                    en: "The computer center? It's right next door."
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "The computer center is on the other side of town."
          robot:
            - type: sequence
              items:
                - text:
                    en: "The computer center is on the other side of town, so far away from all the tasty Qroissants..."
          mayor:
            - type: sequence
              items:
                - text:
                    en: "Did you find out a bit about superposition?"
                  responses:
                    - text:
                        en: "Yes, it's when you wear a cape and stand in the way of evil."
                      thenText:
                        en: "I'm not sure about that, but I can tell you why I think it's important."
                      then: quantum-system-explanation
                    - text:
                        en: "When a qubit exists in a combined state of 0 and 1 at the same time."
                      thenText:
                        en: "Nice! But you still seem doubtful. Let me give you a bit more context."
                      then: quantum-system-explanation
                    - text:
                        en: "A group of electrons interacting in a molecule."
                      thenText:
                        en: "Hm, that sounds like a quantum system. Superposition is when one qubit exists in a combined state of 0 and 1 at the same time. But I wanted to tell you more about quantum systems so this is a perfect transition!"
            - id: quantum-system-explanation
              type: sequence
              items:
                - text:
                    en: "If we used a classical computer to conduct a simulation, a system of 4 electrons has a state described by 16 numbers. 5 particles, 32 numbers.... 6 particles, 64 numbers... This is exponential growth."
                - text:
                    en: "If your system had 50 electrons, you would need over a quadrillion bits in a classical computer just to describe one state of the system!"
                - text:
                    en: "But a quantum computer can represent all of these quadrillion states using just 50 qubits in superposition. Pretty cool, right?"
                  responses:
                    - text:
                        en: "Indeed, very cool, I'll tell my friend about this right away."
                      thenText: "Great! Spread the word!"
                      set: [ 'learn.superposition' ]
                    - text:
                        en: "I think I'm cooler."
                      thenText:
                        en: "I think you're cool too. But maybe this could be useful to your friend?"
                      set: [ 'learn.superposition' ]
      - cond: 'visit.computer.center & qubit.intro & learn.superposition'
        prompt:
          en: "Propose using a quantum computer to run the simulation."
        #target: citizenBraid
        dialogues:
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "You're back! Do you have an idea for how to fix my simulation?"
                  responses:
                    - text:
                        en: "Turn it off and on again."
                      then: on-off
                    - text:
                        en: "Use a quantum computer to efficiently simulate a quantum system."
                      thenText:
                        en: "Oh fantastic! Thank you for your help!"
                      set: ['quest.simulation.done', 'pnt.love.simulation']
            - id: on-off
              type: sequence
              items:
                - text:
                    en: "Oh... I tried that already... Do you think a quantum computer might work?"
                  responses:
                    - text: 
                        en: "Yes! You can use a quantum computer to efficiently simulate a quantum system."
                      thenText:
                        en: "Oh fantastic! Thank you for your help!"
                      set: ['quest.simulation.done', 'pnt.love.simulation']
                    - text:
                        en: "Maybe, maybe not, the universe is full of unknowns..."
                      thenText:
                        en: "Uh, ok, I guess I'll try it, thanks for your help!"
                      set: ['quest.simulation.done', 'pnt.love.simulation']
  cafe:
    npc: robot
    mood: exclamation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "Welcome to our Qafé, we have lots of tasty Qroissants. We only accept QCards for payment."
            - text:
                en: "I see you don't have one, would you like to get one to pay for your Qroissant?"
              responses:
                - text:
                    en: "Yes, I want a QCard, where can I get one?"
                  thenText:
                    en: "Go to the bank down the street, they will help you."
                  set: [ 'quest.cafe.active' ]
                - text:
                    en: "I'm not hungry, thank you."
                  thenText:
                    en: "Ok, have a nice day, you can come back anytime!"
    stages:
      - cond: '^learned.encryption & ^learned.shors.algorithm & ^got.qcard'
        prompt:
          en: "Visit the bank."
        #target: citizenPuan
        dialogues:
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "The bank? It's right next door. My friend works there, she has pink hair, you can't miss her."
          citizenPunk:
            - type: sequence
              items:
                - text:
                    en: "The bank? It's right next door, you just passed it."
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "The bank? It's down the road near the Qafé."
          citizenPuan:
            - type: sequence
              items:
                - text:
                    en: "Welcome to the bank. I can help with getting a QCard, this payment system was built when classical encryption was broken by quantum computing."
                  responses:
                    - text:
                        en: "What is encryption?"
                      then: encryption
                    - text:
                        en: "I don't trust banks, I would rather forage for mushrooms."
                      then: mushroom
            - id: mushroom
              type: first
              items:
                - type: sequence
                  items:
                    - text:
                        en: "I like mushrooms too, but I also love a Qroissant every once in a while, and I need my QCard to get one. Do you want to learn about how encryption works?"
                      responses:
                        - text:
                            en: "Sure, tell me about encryption."
                          then: encryption
                        - text:
                            en: "No, I just want to forage for mushrooms."
                          thenText:
                            en: "Ok, have a nice day, you can come back anytime!"
            - id: encryption
              type: first
              items:
                - type: sequence
                  items:
                    - text:
                        en: "Imagine you want to send a letter to a friend, but you don’t want anyone else to read it. So, you use a special code to scramble the words."
                    - text:
                        en: "Your friend, who knows the secret code, can unscramble it and read the message. But if someone else tries to look at it, all they’ll see is nonsense."
                    - text:
                        en: "Computers do the same thing with data. They use mathematical formulas to turn information into a secret code. This keeps things like passwords, messages, and bank details safe from hackers!"
                      then: quiz-encryption
            - id: quiz-encryption
              type: sequence
              items:
                - text:
                    en: "Alright, that was a lot of new info, let's double-check, can you tell me what encryption is?"
                  responses:
                    - text:
                        en: "When you write a message in really bad handwriting."
                      thenText: 
                        en: "Haha that kind of encryption will always be relevant! But the technical type of encryption your phone or laptop uses can be broken by quantum computing, so we use new techniques now."
                      then: prompt-to-learn-shors-algorithm
                    - text:
                        en: "A way to keep sensitive information safe from hackers."
                      thenText: 
                        en: "Nice! The most common form of encryption was broken by quantum computing, so we use new techniques now."
                      then: prompt-to-learn-shors-algorithm
                    - text:
                        en: "When you hide your files in a secret vault deep underground."
                      thenText: 
                        en: "Not quite... Try again."
                      then: quiz-encryption
            - id: prompt-to-learn-shors-algorithm
              type: sequence
              items:
                - text:
                    en: "I'll give you this QCard to keep your data safe if you can tell me about the famous algorithm that broke classical encryption."
                  responses:
                    - text:
                        en: "I'll go do some research!"
                      thenText: 
                        en: "Nice! If you don't know where to start, I've heard there's a retired scientist often in the park at the edge of town who likes to talk quantum."
                      set: [ 'learned.encryption' ]  
                    - text:
                        en: "I don't know where to start..."
                      thenText: 
                        en: "I've heard there's a retired scientist often in the park at the edge of town who likes to talk quantum."
                      set: [ 'learned.encryption' ]  
      - cond: 'learned.encryption & ^learned.shors.algorithm & ^got.qcard'
        prompt:
          en: "Learn about the algorithm that broke classical encryption."
        #target: citizenBlue
        dialogues:
          robot:
            - type: sequence
              items:
                - text:
                    en: "If you're looking for the park, it's just down the road in the other direction."
          citizenPunk:
            - type: sequence
              items:
                - text:
                    en: "The park? It's just down the road, past the computer center."
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "The park? It's down the road at the edge of town, past the computer center."
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "The park? You're nearly there, just keep going, past the computer center, and you'll find it."
          mayor:
            - type: sequence
              items:
                - text:
                    en: "The park? It's a lovely place, my former colleague is often fishing in the lake. It's right next to the computer center, past those trees."
          citizenBlue:
          - type: sequence
            items:
              - text:
                  en: "Hi, I'm a retired scientist, enjoying a relaxing day in the park. When I was younger, I worked on groundbreaking quantum computing research."
              - text:
                  en: "I know a lot about the quantum world, are you seeking knowledge?"
                responses:
                  - text:
                      en: I'm looking for a Qroissant, I'm very hungry, do you have one?
                    then: croissant-diversion
                  - text:
                      en: "Yes! Can you tell me about the algorithm that broke classical encryption?"
                    then: shor-explanation
          - id: croissant-diversion
            type: sequence
            items:
              - text:
                  en: "Not in my pocket, but there are freshly baked Qroissants every day down the road!"
              - text: 
                  en: "If you want to stick around, I can answer any quantum curiousities you have."
                responses:
                  - text:
                      en: "Can you tell me about the algorithm that broke classical encryption?"
                    then: shor-explanation
                  - text:
                      en: "I really just want a Qroissant, do you have one?"
                    then: croissant-diversion
          - id: shor-explanation
            type: sequence
            items:
              - text:
                  en: "Certainly! In the past, we protected information by relying on the fact that it's very difficult to figure out the prime factors of a large number."
              - text:
                  en: "But then came Peter Shor, who figured out that a large quantum computer can do this lightning fast."
              - text:
                  en: "So we developed post-quantum encryption -- new techniques to keep sensitive data safe."
                set: ['learned.shors.algorithm']
      - cond: 'learned.encryption & learned.shors.algorithm & ^got.qcard'
        prompt:
          en: "Prove your quantum algorithm knowledge at the Bank to get a QCard"
        #target: citizenPuan
        dialogues:
          citizenPunk:
            - type: sequence
              items:
                - text:
                    en: "The bank? It's right next door."
          citizenBraid:
            - type: sequence
              items:
                - text: 
                    en: "The bank? It's right next door, you just passed it."
          robot:
            - type: sequence
              items:
                - text:
                    en: "mmmm so many tasty Qroissants nom nom nom... Oh, the bank? It's right next door."
          citizenPuan:
            - text:
                en: "So, how was classical encryption broken?"
              responses:
                - text:
                    en: "With a really big hammer."
                  thenText:
                    en: "Uh, no... Maybe you're not ready to handle this technology."
                - text:
                    en: "By running Shor's prime factorization algorithm on a large quantum computer."
                  thenText:
                    en: "Yes! Nice research work, here's your QCard."
                  set: ['got.qcard']
      - cond: 'learned.encryption & learned.shors.algorithm & got.qcard'
        prompt:
          en: "Buy a Qroissant at the Qafé with your new QCard."
        #target: robot
        dialogues:
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "I eat a Qroissant every day, they are so tasty!"
          robot:
            - text:
                en: "Congrats on getting your QCard. Here is your tasty Qroissant."
              set: ['quest.cafe.done', 'pnt.love.cafe']
ending:
  dialogue:
    - type: sequence
      items:
        - cond: 'quest.cafe.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned about encryption and Shor's Algorithm :love:"
        - cond: 'quest.delivery.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned about Grover's search and entanglement :love:"
        - cond: 'quest.simulation.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned how quantum computers differ from classical computers. :love:"
        - cond: 'quest.computer.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned how quantum computers process information. :love:"
        - cond: '^quest.cafe.done'
          type: sequence
          items:
            - text:
                en: "Play again to learn about encryption and Shor's Algorithm."
        - cond: '^quest.delivery.done'
          type: sequence
          items:
            - text:
                en: "Play again to learn about Grover's search and entanglement."
        - cond: '^quest.simulation.done'
          type: sequence
          items:
            - text:
                en: "Play again to learn how classical and quantum computers differ."
        - cond: '^quest.computer.done'
          type: sequence
          items:
            - text:
                en: "Play again to learn about how quantum computers process information."