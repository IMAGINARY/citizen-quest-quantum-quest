decision:
  en: "You wake up in the future where quantum computing has become a normal part of life."
prompt:
  en: "You wake up in the future where quantum computing has become a normal part of life. Interact with people in this new world and complete quests to learn how it works."
npcs:
  mayor:
    name:
      en: "Computer Center Technician"
    spawn: { x: 4003, y: 743 }
    dialogue:
    - type: sequence
      items:
        - text:
            en: "type type type"
  robot:
    name:
      en: "Barista"
    spawn: { x: 245, y: 750 }
    dialogue:
      - type: random
        items:
          - text:
              en: "I love working here because I'm surrounded by my favorite snacks all day."
          - text:
              en: "Qroissant Qroissant Qroissant"
          - text:
              en: "Qoffee Qoffee Qoffee"
  citizenBraid:
    name:
      en: "Local Student"
    spawn: { x: 774, y: 767 }
    dialogue:
      - text:
          en: "I want to fill my brain with knowledge!"
  citizenHoodie:
    name:
      en: "Local Resident"
    spawn: { x: 2930, y: 830 }
    cond: 'quest.delivery.active & spoke.to.doorman & understood.grover.search & passed.grover.search.quiz'
    dialogue:
      - text:
          en: "I live in this wonderful quantum world."
  citizenPunk:
    name:
      en: "Post-Office Clerk"
    spawn: { x: 2400, y: 700 }
    dialogue:
      - text:
          en: "I handle all the mail around here."
        set: [ 'op.love.2' ]
  citizenPuan:
    name:
      en: "Banker"
    spawn: { x: 1522, y: 700 }
    dialogue:
      - text:
          en: "You can trust me with your money."
  citizenBlue:
    name:
      en: "Wise Person"
    type: citizenAqua
    spawn: { x: 5128, y: 658 }
    dialogue:
      - text:
          en: "I am very wise in the ways of all things quantum."
  dogTan:
    name:
      en: "Emmy"
    spawn: { x: 5893, y: 719 }
    dialogue:
      - text:
          en: "Woof!"
  lawyer:
    name:
      en: "Doorman"
    spawn: { x: 2832, y: 829 }
    dialogue:
      - text:
          en: "I take care of this huuuge apartment building."
quests:
  simulation:
    npc: citizenBraid
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "I'm trying to create a simulation of a superconducting material, but I added one extra atom, and my computer froze. Can you help me?"
              responses:
                - text:
                    en: "I'm allergic to computers, sorry."
                  thenText:
                    en: "Oh..."
                - text:
                    en: "Yes! I saw a computer center down the road."
                  thenText:
                    en: "Thank you!"
                  set: [ 'quest.simulation.active' ]
    stages:
      - cond: '^visit.computer.center & ^qubit.intro & ^learn.superposition'
        prompt:
          en: "Visit the computer center."
        target: mayor
        dialogues:
          mayor:
            - type: sequence
              items:
                - text:
                    en: "Ah yes, classical computers struggle to simulate quantum systems. As the system grows, the complexity increases at an exponential rate."
                - text:
                    en: "Let's understand the difference between a quantum and a classical computer. In a classical computer information is stored and processed using billions of tiny switches called bits that can each be set to on or off (0 or 1)."
                - text:
                    en: "But, a qubit (the basic unit of information in a quantum computer) doesn't have this constraint, it can be in a superposition of 0 and 1 at the same time."
                  responses:
                    - text:
                        en: "How can it be 0 and 1 at the same time?"
                      thenText:
                        en: "You seem like a smart egg. Do a bit of research, I bet you can figure it out."
                      set: ['visit.computer.center'] 
                    - text:
                        en: "I don't believe you..."
                      thenText:
                        en: "That's fair! Try doing your own research to convince yourself."
                      set: ['visit.computer.center']
      - cond: 'visit.computer.center & ^qubit.intro & ^learn.superposition'
        prompt:
          en: "Find out what superposition is."
        target: citizenBlue
        dialogues:
          citizenBlue:
            - type: sequence
              items:
                - text:
                    en: "You want to know about superposition? Certainly! The state of a qubit is encoded by two numbers, let's call them A and B."
                - text:
                    en: "When the qubit is measured, it has an A^2% chance of collapsing to 0, and B^2% chance of collapsing to 1."
                - text:
                    en: "But until we measure it, nobody knows the state."
                  responses:
                    - text:
                        en: "Sounds impossible."
                      thenText:
                        en: "I understand your doubt! But I promise it's real. Try asking the computer technician to convince you."
                      set: [ 'qubit.intro' ]
                    - text:
                        en: "How could that be useful?"
                      thenText:
                        en: "I understand your doubt! But I promise it's real. Try asking the computer technician to convince you."
                      set: [ 'qubit.intro' ]
      - cond: 'visit.computer.center & qubit.intro & ^learn.superposition'
        prompt:
          en: "Question the computer technician."
        target: mayor
        dialogues:
          mayor:
            - type: sequence
              items:
                - text:
                    en: "Did you learn a bit about superposition?"
                  responses:
                    - text:
                        en: "Yes, it's when you wear a cape and stand in the way of evil."
                      thenText:
                        en: "I'm not sure about that, but I can tell you why I think it's important."
                      then: quantum-system-explanation
                    - text:
                        en: "Yes, it's when a qubit exists in a combined state of 0 and 1 at the same time, and has some chance of collapsing to one or the other when measured."
                      thenText:
                        en: "Nice! But you still seem doubtful. Let me give you a bit more context."
                      then: quantum-system-explanation
            - id: quantum-system-explanation
              type: sequence
              items:
                - text:
                    en: "A system of 4 quantum particles has a state described by 16 numbers. 5 particles, 32 numbers.... 6 particles, 64 numbers... This is exponential growth."
                - text:
                    en: "If your system had 50 particles, you would need over a quadrillion bits in a classical computer just to describe one state!"
                - text:
                    en: "But a quantum computer can represent all of these quadrillion states using just 50 qubits in superposition. Pretty cool, right?"
                  responses:
                    - text:
                        en: "Indeed, very cool, I'll tell my friend about this right away."
                      set: [ 'learn.superposition' ]
                    - text:
                        en: "I think I'm cooler."
                      thenText:
                        en: "I think you're cool too. But maybe this could be useful to your friend?"
                      set: [ 'learn.superposition' ]
      - cond: 'visit.computer.center & qubit.intro & learn.superposition'
        prompt:
          en: "Propose using a quantum computer to run the simulation."
        target: citizenBraid
        dialogues:
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "You're back! Do you have an idea for how to fix my simulation?"
                  responses:
                    - text:
                        en: "Turn it off and on again."
                      thenText:
                        en: "Oh... I tried that already, but thanks for trying..."
                    - text:
                        en: "Use a quantum computer, it will be far more efficient at simulating a quantum system."
                      thenText:
                        en: "Oh fantastic! Thank you for your help!"
                      set: ['quest.simulation.done', 'pnt.love.simulation']

  computer:
    npc: citizenBraid
    mood: interrogation
    required: simulation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "You taught me a quantum computer would be perfect for my simulation, but I don't have access to one, can you help me?"
              responses:
                - text:
                    en: "Sure, I think I know who to ask."
                  thenText:
                    en: "Thank you!"
                  set: [ 'quest.computer.active' ]
                - text:
                    en: "No, sorry, I'm very busy trying to buy a Qroissant right now."
                  thenText:
                    en: "I understand, that sounds urgent, Qroissants are essential to well-being."
    stages:
      - cond: '^found.computer & ^circuit.basic & ^circuit.explanation'
        prompt:
          en: "Find a quantum computer."
        target: mayor
        dialogues:
          mayor:
            - type: sequence
              items:
                - text:
                    en: "You want to run your friend's simulation on my quantum computer?"
                - text:
                    en: "Sure, but you'll need to prove you're qualified to operate this tech. Come back when you can tell me about quantum circuits."
                  set: ['found.computer']
      - cond: 'found.computer & ^circuit.basic & ^circuit.explanation'
        prompt:
          en: "Learn about quantum circuits."
        target: citizenBlue
        dialogues:
          citizenBlue:
            - type: sequence
              items:
                - text: 
                    en: "Circuits? Certainly, I've got some knowledge to share. A circuit is like a recipe."
                - text:
                    en: "It takes ingredients, puts them through a series of steps, and gives you a final dish."
                - text:
                    en: "The Qafé has fantastic recipes for tasty Qroissants and Qookies, I bet they could help explain this."
                  set: ['circuit.basic']
      - cond: 'found.computer & circuit.basic & ^circuit.explanation'
        prompt:
          en: "Ask baker about how circuits are like recipes."
        target: robot
        dialogues:
          robot:
            - type: sequence
              items:
                - text:
                    en: "Oh I love circuit diagrams! They remind me of my daily early morning baking routine."
                - text:
                    en: "First, I gather my ingredients, flour, sugar, butter, chocolate chips..."
                  responses:
                    - text:
                        en: "This is making me hungry, can I have a Qookie?"
                      then: cookie-analogy
                    - text:
                        en: "What would the ingredients be in a quantum computer?"
                      then: cookie-analogy
            - id: cookie-analogy
              type: sequence
              items:
                - text:
                    en: "Haha this explanation is making me hungry, let's both have a Qookie."
                - text:
                    en: "In a quantum computer, these ingredients would be qubits."
                - text:
                    en: "Then, beating the eggs, folding in the flour, that's all replaced with operations we call 'gates.'"
                - text:
                    en: "And in the end, by passing our qubits through a series of gates, we have transformed our original ingredients into a desirable Qookie! --uh, I mean, a mathematical ouput..."
                  responses:
                    - text:
                        en: "What kind of transformations happen inside a quantum computer?"
                      thenText:
                        en: "Ah, great question, I'm not an expert on quantum gates, but I think there's one nearby who can tell you."
                      set: ['circuit.explanation']
                    - text:
                        en: "Can I have another Qookie?"
                      thenText:
                        en: "Ha I'm going to limit you to one free Qookie today, but if you want to learn more about quantum gates and circuits, I think there's an expert nearby."
                      set: ['circuit.explanation']
      - cond: 'found.computer & circuit.basic & circuit.explanation'
        prompt:
          en: "Ask an expert about quantum gates"
        target: mayor
        dialogues:
          mayor:
            - type: sequence
              items:
                - text:
                    en: "You're back! Can you tell me what a quantum circuit is?"
                  responses:
                    - text:
                        en: "A recipe which takes qubits and transforms their states."
                      thenText:
                        en: "Yes, nice analogy! I can tell you a bit more about the technical details."
                      then: gates-explanation
                    - text:
                        en: "When you spin around really fast."
                      thenText: 
                        en: "Um, that doesn't sound quite right, but maybe I can explain an example to help you understand."
                      then: gates-explanation
            - id: gates-explanation
              type: sequence
              items:
                - text:
                    en: "One gate that we use in both classical and quantum computing is called the 'NOT' gate"
                - text:
                    en: "When we pass a bit, or a qubit, through this gate, it switches the state, from 0 to 1, or from 1 to 0."
                  responses:
                    - text:
                        en: "Can we use a special gate that creates superposition?"
                      then: quantum-gates
                    - text:
                        en: "Like flipping a coin?"
                      thenText:
                        en: "Yes! But qubits can be in more than just a 'heads' or 'tails' state like a coin, remember superposition?"
                      then: quantum-gates     
            - id: quantum-gates             
              type: sequence
              items:
                - text:
                    en: "The 'Hadamard' gate takes a qubit in a basic state of 0 or 1, and changes it to a superposition of both states, where the qubit has equal probability of being measured as 0 or 1."
                - text:
                    en: "And, if we apply this gate twice, we get back to where we started."
                - text:
                    en: "So, if we had a qubit already in superposition, and apply the Hadamard gate, now we have a basic state that we can apply the classical NOT gate to."
                - text:
                    en: "Before I let you use this quantum computer, tell me, if I start with a qubit in a 0 state, and apply Hadamard, Hadamard, NOT, what will I get?"
                  responses:
                    - text:
                        en: "A qubit in state 1"
                      thenText:
                        en: "Nice! Alright, you can run your friend's simulation on my machine. Good luck!"    
                      set: ['quest.computer.done']
                    - text:
                        en: "100€"
                      thenText:
                        en: "Not quite, we'll land in state 1. But oh- what's this? I don't usually accept bribes, but... Ok, you can run your friend's simulation on my machine. Good luck!"
                      set: ['quest.computer.done']
                    - text:
                        en: "A qubit in state 0, same as the start."
                      thenText:
                        en: "Not quite, we'll land in state 1. But oh- what's this? A Qookie? I don't usually accept bribes, but this is so tasty... Ok, you can run your friend's simulation on my machine. Good luck!"
                      set: ['quest.computer.done']
  cafe:
    npc: robot
    mood: exclamation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "Welcome to our Qafé, we have lots of tasty Qroissants. We only accept QCards for payment. I see you don't have one, would you like to get one to pay for your Qroissant?"
              responses:
                - text:
                    en: "Yes, I want a QCard, where can I get one?"
                  thenText:
                    en: "Go to the bank on the corner, they will help you."
                  set: [ 'quest.cafe.active' ]
                - text:
                    en: "I'm not hungry, thank you."
                  thenText:
                    en: "Ok, have a nice day."
    stages:
      - cond: '^learned.encryption & ^learned.shors.algorithm & ^got.qcard'
        prompt:
          en: "Visit the bank."
        target: citizenPuan
        dialogues:
          citizenPuan:
            - type: sequence
              items:
                - text:
                    en: "Welcome to the bank. I can help with getting a QCard, this payment system was built when classical encryption was broken by quantum computing."
                  responses:
                    - text:
                        en: "What is encryption?"
                      then: encryption
                    - text:
                        en: "I don't trust banks, I would rather forage for mushrooms."
                      thenText: 
                        en: "I like mushrooms too, but I also love a Qroissant every once in a while. I'll be here if you change your mind."
            - id: encryption
              type: first
              items:
                - type: sequence
                  items:
                    - text:
                        en: "Imagine you want to send a letter to a friend, but you don’t want anyone else to read it. So, you use a special code to scramble the words."
                    - text:
                        en: "Your friend, who knows the secret code, can unscramble it and read the message. But if someone else tries to look at it, all they’ll see is nonsense."
                    - text:
                        en: "Computers do the same thing with data. They use mathematical formulas to turn information into a secret code. This keeps things like passwords, messages, and bank details safe from hackers!"
                      then: quiz-encryption
            - id: quiz-encryption
              type: sequence
              items:
                - text:
                    en: "Alright, that was a lot of new info, let's double-check, can you tell me what encryption is?"
                  responses:
                    - text:
                        en: "When you write a message in really bad handwriting."
                      thenText: 
                        en: "Not quite... Try again."
                      then: quiz-encryption
                    - text:
                        en: "A way to keep things like passwords, messages, and bank details safe from hackers."
                      thenText: 
                        en: "Nice! The most common form of encryption was broken by quantum computing, so we use new techniques now."
                      then: prompt-to-learn-shors-algorithm
                    - text:
                        en: "When you hide your files in a secret vault deep underground."
                      thenText: 
                        en: "Not quite... Try again."
                      then: quiz-encryption
            - id: prompt-to-learn-shors-algorithm
              type: sequence
              items:
                - text:
                    en: "I'll give you this QCard to keep your data safe if you can tell me about the famous algorithm that prompted its creation."
                  set: [ 'learned.encryption' ]  
      - cond: 'learned.encryption & ^learned.shors.algorithm & ^got.qcard'
        prompt:
          en: "Learn about the algorithm that broke classical encryption."
        target: citizenBlue
        dialogues:
          citizenBlue:
          - type: sequence
            items:
              - text:
                  en: "I know a lot about the quantum world, are you seeking knowledge?"
                responses:
                  - text:
                      en: I'm looking for a Qroissant, I'm very hungry, do you have one?
                    thenText:
                      en: "Not in my pocket, but there are freshly baked Qroissants every day down the road!"
                  - text:
                      en: "Yes! Can you tell me about the algorithm that broke classical encryption?"
                    then: shor-explanation
          - id: shor-explanation
            type: sequence
            items:
              - text:
                  en: "Certainly! In the past, we protected information by relying on the fact that it's very difficult to figure out the prime factors of a large number."
              - text:
                  en: "But then came Peter Shor, who figured out that a large quantum computer can do this lightning fast."
              - text:
                  en: "So we developed post-quantum encryption -- new techniques to keep sensitive data safe."
                set: ['learned.shors.algorithm']
      - cond: 'learned.encryption & learned.shors.algorithm & ^got.qcard'
        prompt:
          en: "Prove your quantum algorithm knowledge to get a QCard"
        target: citizenPuan
        dialogues:
          citizenPuan:
            - text:
                en: "So, how was classical encryption broken?"
              responses:
                - text:
                    en: "With a really big hammer."
                  thenText:
                    en: "Uh, no... Maybe you're not ready to handle this technology."
                - text:
                    en: "By running Shor's prime factorization algorithm on a large quantum computer."
                  thenText:
                    en: "Yes! Nice research work, here's your QCard."
                  set: ['got.qcard']
      - cond: 'learned.encryption & learned.shors.algorithm & got.qcard'
        prompt:
          en: "Buy your Qroissant with a QCard."
        target: robot
        dialogues:
          robot:
            - text:
                en: "Congrats on getting your QCard. Here is your tasty Qroissant."
              set: ['quest.cafe.done', 'pnt.love.cafe']
  delivery:
    npc: citizenPunk
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "We’ve got a premium express package for the apartment complex down the street that must be delivered today, but our staff all called in sick. Could you help me out, please? "
              responses:
                - text:
                    en: "Sure, I can help out."
                  thenText:
                    en: "Thank you so much! Just so you know, the package only has a name, and no apartment number, but I'm sure you can figure it out."
                  set: [ 'quest.delivery.active' ]
                - text:
                    en: "Sorry, I don’t think I can do this. I’m not in the delivery business."
                  thenText:
                    en: "I understand. We'll try to find someone else."
    stages:
      - cond: '^spoke.to.doorman & ^understood.grover.search & ^passed.grover.search.quiz'
        prompt:
          en: "Find the apartment complex."
        target: lawyer
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "Hey there. Delivering something? Just so you know, for the privacy of our residents, our mailboxes are labeled only by apartment numbers, not names."
                - text:
                    en: "Do you know which apartment you're delivering to?"
                  responses:
                    - text:
                        en: "The fanciest one."
                      thenText:
                        en: "I'm not sure which that is..."
                    - text:
                        en: "Oh no, I only have a name."
                      thenText:
                        en: "I have a special search program that matches names and numbers. I'll let you use it if you can tell me what it's called and how it works."
                      set: ['spoke.to.doorman']
      - cond: 'spoke.to.doorman & ^understood.grover.search & ^passed.grover.search.quiz'
        prompt:
          en: "Find out what kind of search algorithm can help you deliver this package."
        target: citizenBlue
        dialogues:
          citizenBlue:
            - type: sequence
              items:
                - text:
                    en: "Hey there, you look stressed, can I help you?"
                  responses:
                    - text:
                        en: "Yes, can I get a Qoffee?"
                      thenText:
                        en: "I prefer tea, but I'm sure the Qafé down the street has plenty of Qoffee!"
                    - text:
                        en: "Yes, I'm trying to learn about a search algorithm."
                      then: grover-explanation  
            - id: grover-explanation  
              type: sequence
              items:
                - text:
                   en: "Ah! Grover's search—what an exciting innovation. Imagine you're looking for a specific point in a huge space."
                - text:
                   en: "A classical computer would have to check many points one by one, like a taxi weaving through city streets."
                - text:
                   en: "But Grover's quantum algorithm can take a kind of 'shortcut,' exploring the space more efficiently—like a bird flying straight to its destination instead of following the roads."
                  set: [ 'understood.grover.search' ]
      - cond: 'spoke.to.doorman & understood.grover.search & ^passed.grover.search.quiz'
        prompt:
          en: "Prove your new knowledge to the doorman."
        target: lawyer
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "So, what kind of search do you think would be most effective?"
                  responses:
                    - text:
                        en: "A smart dog sniffing the package and leading us the right way."
                      thenText:
                        en: "I love this idea, but I'm terribly allergic..."
                      then: quiz-grover
                    - text:
                        en: "Shouting the name very loud."
                      thenText:
                        en: "...please don't, my ears are very sensitive."
                      then: quiz-grover
                    - text:
                        en: "A quantum algorithm called Grover's Search"
                      thenText:
                        en: "Nice! Seems like you did your research."
                      then: quiz-grover
            - id: quiz-grover
              type: first
              items:
                - text:
                    en: "I think Grover's search would be a great solution. Just to double-check, can you tell me how it works?"
                  responses:
                    - text:
                        en: "It checks every option simultaneously."
                      thenText:
                        en: "A lot of people think that! But it actually works a little differently..."
                        then: quiz-grover
                    - text:
                        en: "It finds a shorter path there, like a bird flying faster than a car winding through streets."
                      thenText:
                        en: "Nice! I'll run the search for you now. The recipient of your package should come down in a second."
                      set: [ 'passed.grover.search.quiz' ]
      - cond: 'spoke.to.doorman & understood.grover.search & passed.grover.search.quiz'
        prompt:
          en: "Deliver the package!"
        target: citizenHoodie
        dialogues:
          citizenHoodie:
            - type: sequence
              items:
                - text:
                    en: "I hear you have a package for me! I'm quite excited to open it, because it's entangled with a package my friend has."
                - text:
                    en: "Do you know what entanglement is?"
                  responses:
                    - text:
                        en: "When a ball of yarn has lots of knots in it."
                      thenText:
                        en: "Haha, I hope that's not what's in my box..."
                      then: cupcake
                    - text:
                        en: "When the states of two objects are connected, even when separated by vast distances."
                      thenText:
                        en: "You really know your stuff! Exactly right, when I open this box, I'll instantly know something about what's in my friend's box."
                      then: cupcake
            - id: cupcake
              type: sequence
              items:
                - text:
                   en: "In this case, we got two beautiful pink cupcakes, one with strawberry filling, one with tuna fish. As soon as I bite into mine, I'll know the fate of my friend too."
                - text:
                    en: "Do you want to take the first bite?"
                  responses:
                    - text:
                        en: "No, I'd like to avoid the risk of a tuna fish cupcake..."
                      thenText: 
                        en: "*munch* Your loss! This strawberry cupcake is delicious."
                      set: [ 'quest.delivery.done', 'pnt.love.delivery' ]
                    - text:
                        en: "Yes, please!"
                      thenText: 
                        en: "From the look on your face, seems like we got lucky! A delicious strawberry cupcake for us, and my friend should be munching on tuna any minute now..."
                      set: [ 'quest.delivery.done', 'pnt.love.delivery' ]
ending:
  dialogue:
    - type: sequence
      items:
        - cond: 'quest.cafe.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned about encryption and Shor's Algorithm :love:"
        - cond: '^quest.cafe.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You did not learn about encryption and Shor's Algorithm."
        - cond: 'quest.delivery.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned about Grover's search :love:"
        - cond: '^quest.delivery.done'
          type: sequence
          items:
            - text:
                en: "You did not learn about Grover's search."
        - cond: 'quest.simulation.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned how quantum computers differ from classical computers. :love:"
        - cond: '^quest.simulation.done'
          type: sequence
          items:
            - text:
                en: "You did not learn how classical and quantum computers differ."
        - cond: 'quest.computer.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You learned how quantum computers process information. :love:"
        - cond: '^quest.computer.done'
          type: sequence
          items:
            - text:
                en: "You did not learn about how quantum computers process information."
