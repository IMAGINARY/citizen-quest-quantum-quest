decision:
  en: "It is Love Data Week. You are at a math conference and meet different mathematicians. Interact with them and complete their quests."
prompt:
  en: "You wake up in the future where quantum computing has become a commonly used tool in science and technology. Interact with people in this new world and complete quests to learn how it works."
# initFlags:
  # - inc.mayor
  # - inc.citizenPunk
  # - inc.lawyer
scenery:
  mardiDesk:
    spawn: { x: 361, y: 553 }
  coffeeTable:
    spawn: { x: 1327, y: 551 }
  libraryDesk:
    spawn: { x: 1902, y: 547 }
npcs:
  mayor:
    name:
      en: "Felicia Hausvillage"
    spawn: { x: 819, y: 448 }
    dialogue:
    - type: sequence
      items:
        - text:
            en: "I am a topologist."
  robot:
    name:
      en: "Barista"
    spawn: { x: 1079, y: 551 }
    dialogue:
      - type: random
        items:
          - text:
              en: "“Mathematics is the queen and servant of sciences”, according to a quote by Carl F. Gauss."
          - text:
              en: "Is Mathematics even a science?"
          - text:
              en: "Research data are not only empirical records."
          - text:
              en: "In modern mathematical research, we can find many types of data."
          - text:
              en: "One key difference between mathematics and other sciences is the existence of proofs."
          - text:
              en: "Have you subscribed to the MaRDI newsletter, yet?"
          - text:
              en: "Mathematics is not especially well placed in terms of managing research data and software in comparison to other fields."
          - text:
              en: "Data must be accompanied by rich metadata that describes it."
          - text:
              en: "Storing and archiving research data is not a trivial matter and should be planned carefully."
          - text:
              en: "Information is data tagged with meaning."
          - text:
              en: "Reusing knowledge is ingrained in the practice of scientific research as the basis of verifiability."
          - text:
              en: "Access to research information is the most fundamental principle for spreading science across the scientific community and society."
          - text:
              en: "I :love: math!"
            set: [ 'op.love.1' ]
          - text:
              en: "Your math is data!"
  citizenBraid:
    name:
      en: "local student"
    spawn: { x: 311, y: 538 }
    dialogue:
      - text:
          en: "I work at the MaRDI help desk. I will help you with questions about data."
  citizenPunk:
    name:
      en: "post-office clerk"
    spawn: { x: 1212, y: 333 }
    dialogue:
      - text:
          en: "I am a statistician and I love data :love:!"
        set: [ 'op.love.2' ]
  citizenPuan:
    name:
      en: "Banker"
    spawn: { x: 1929, y: 530 }
    dialogue:
      - text:
          en: "I am a banker."
  citizenBlue:
    name:
      en: "mysterious wise person"
    type: citizenAqua
    spawn: { x: 435, y: 538 }
    dialogue:
      - text:
          en: "Do you know, there is a real MaRDI help desk at the MaRDI website? Check it out after the game."
  dogTan:
    name:
      en: "Emmy"
    spawn: { x: 549, y: 540 }
    dialogue:
      - text:
          en: "Woof!"
  lawyer:
    name:
      en: "doorman"
    spawn: { x: 331, y: 333 }
    dialogue:
      - text:
          en: "I take care of this huuuge apartment building."
  coffeeMachine:
    type: invisible
    name:
      en: "PercoLaTeX 3000™"
    spawn: { x: 1229, y: 560 }
    dialogue:
      - type: first
        items:
          - text:
              en: "Let's integrate some coffee into your day!"
            responses:
              - text:
                  en: "Espresso"
                then: brew
              - text:
                  en: "Latte"
                then: brew
              - text:
                  en: "Cappuccino"
                then: brew
      - id: brew
        type: sequence
        items:
          - text:
              en: "Beep! Whirrrrrr..."
          - text:
              en: "Ssshhhhhhhh... drip, drip, drip."
  webBrowser:
    type: invisible
    name:
      en: "Web Browser"
    spawn: { x: 1547, y: 322 }
    dialogue:
      - text:
          en: "Where do you want to go?"
        responses:
          - text:
              en: "MaRDI website (mardi4nfdi.de)"
            thenText: "Welcome! We support you in all questions concerning mathematical research data. Get in touch with our team, we are happy to help!"
quests:
  favor:
    npc: mayor
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "I've lost everything. I don't know what to do."
            - text:
                en: "My identity was stolen. Account emptied. Flat gone. All my data just disappeared. As if I had never existed."
              responses:
                - text:
                    en: "I'm so sorry. Can I help?"
                  thenText: 
                    en: "That would be amazing. Can you find out how to protect my data? Maybe the bank can help."
                  set: [ 'quest.favor.active' ]
                - text:
                    en: "I don't have time for this."
                  thenText:
                    en: "Ok."
    stages:
      - cond: 'COUNT("op.favor") >= 3'
        prompt:
          en: "You can let Felicia Hausvillage know."
        target: mayor
        dialogues:
          mayor:
            - text:
                en: "Good to know: articles, drawings, and software tools are data."
              set: [ 'quest.favor.done', 'pnt.love.favor' , 'op.quest.favor']
          lawyer:
            - text:
                en: "You are looking for Felicia? I had a coffee with her a few minutes ago. She is over there."
          citizenPunk:
            - text:
                en: "I am Carla, not Felicia! You are so confused!"
          citizenBraid:
            - text:
                en: "If you want to know more about the types of research data in mathematics, check out the sixth issue of the MaRDI Newsletter. You will :love: it!"
              set: [ 'op.love.4' ]
          citizenBlue:
            - text:
                en: "You can download a cool postcard at the MaRDI website with an illustration for each of the research data types in mathematics."
          citizenPuan:
            - text:
                en: "Have you been to the library at the MFO in Oberwolfach?"
      - prompt:
          en: "Find out if articles, drawings, and software tools are data."
        counter:
          expression: 'COUNT("op.favor")'
          max: 3
          icon: happy
        dialogues:
          mayor:
            - text:
                en: "I am not sure, if articles, drawings and software are considered data."
          lawyer:
            - text:
                en: "I am an algebraist and I’m pretty sure, articles are data. To be 100% sure, ask at the library."
          citizenBraid:
            - text:
                en: "Software is data. From small scripts that help in a particular problem to wide libraries that integrate into larger frameworks."
              set: [ 'op.favor.citizenBraid' ]
          citizenBlue:
            - text:
                en: "Visualizations and examples (including images, animations, and other types of graphics) are data. They have an enormous value for understanding and developing a theory and deserve a full research data curation."
              set: [ 'op.favor.citizenHipster' ]
          citizenPunk:
            - text:
                en: "I am a statistician. I don't think drawings are data. But I'm not sure. You should ask the MaRDI help desk. I usually don't like to be around too many people, but the MaRDIans are very nice! :love:"
              set: [ 'op.love.6' ]
          citizenPuan:
            - text:
                en: "Documents (articles, books) are data. Mathematical texts deserve the same treatment as other forms of structured data."
              set: [ 'op.favor.citizenPuan' ]
  publish:
    npc: robot
    mood: exclamation
    # required: exchange
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "Welcome to our cafe, we have lots of tasty croissants. We only accept QCards for payment. I see you don't have one, would you like to get one to pay for your croissant?"
              responses:
                - text:
                    en: "Yes, I want a QCard, where can I get one?"
                  thenText:
                    en: "Go to the bank on the corner, they will help you."
                  set: [ 'quest.publish.active' ]
                - text:
                    en: "I'm not hungry, thank you."
                  thenText:
                    en: "Ok, have a nice day."
    stages:
      - cond: 'found.publish.qcard'
        prompt:
          en: "Buy your croissant with a QCard."
        dialogues:
          robot:
            - text:
                en: "Congrats on getting your QCard. Here is your tasty croissant."
              set: ['quest.publish.done', 'pnt.love.publish']
      - cond: '^found.publish.qcard'
        prompt:
          en: "Get a QCard from the bank."
        dialogues:
          citizenPuan:
            - type: sequence
              items:
                - text:
                    en: "Welcome to the bank. I can help with getting a QCard, this payment system was built when classical encryption was broken by Quantum Computing."
                  responses:
                    - text:
                        en: "What is encryption?"
                      then: encryption
                    - text:
                        en: "What is quantum computing?"
                      then: quantum
                    - text:
                        en: "Ok, can I have one?"
                      thenText: "Yes, of course, but first you need to show me you understand the technology you're receiving."
                      then: quiz-quantum
            - id: encryption
              type: first
              items:
                - type: sequence
                  items:
                    - text:
                        en: "Imagine you want to send a letter to a friend, but you don’t want anyone else to read it. So, you use a special code to scramble the words."
                    - text:
                        en: "Your friend, who knows the secret code, can unscramble it and read the message. But if someone else tries to look at it, all they’ll see is nonsense."
                    - text:
                        en: "Computers do the same thing with data. They use mathematical formulas to turn information into a secret code. Only people (or computers) with the right “key” can unlock and read it. This keeps things like passwords, messages, and bank details safe from hackers!"
                    - text:
                        en: "What would you like to do now?"
                      responses: 
                        - text:
                            en: "What is Quantum Computing?"
                          then: quantum
                        - text:
                            en: "Can I have a QCard now?"
                          thenText: "Yes, of course, but first you need to show me you understand the technology you're receiving."
                          then: quiz-quantum
            - id: quantum
              type: first
              items:
                - type: sequence
                  items:
                    - text:
                        en: "Quantum computing uses quantum bits to perform calculations that traditional computers can't efficiently handle."
                    - text:
                        en: "Instead of regular bits (which can be either 0 or 1), quantum computers use qubits, which can be 0, 1, or both at the same time (thanks to superposition). They can also be entangled, meaning their states are connected no matter how far apart they are."
                    - text:
                        en: "This allows quantum computers to solve certain problems—like cracking codes or simulating molecules—way faster than classical computers. They’re still in early stages, but if they keep improving, they could revolutionize fields like medicine, AI, and cybersecurity!"
                    - text:
                        en: "What would you like to do now?"
                      responses: 
                        - text:
                            en: "What is Encryption?"
                          then: encryption
                        - text:
                            en: "Can I have a QCard now?"
                          thenText: "Yes, of course, but first you need to show me you understand the technology you're receiving."
                      then: quiz-quantum
            - id: quiz-quantum
              type: first
              items:
                - text:
                    en: "What is quantum computing?"
                  responses:
                    - text:
                        en: "When computers do calculations by jumping between parallel universes."
                      thenText: "Not quite... Try again."
                      then: quiz-quantum
                    - text:
                        en: "Using quantum bits to perform calculations that traditional computers can't efficiently handle."
                      thenText: "Nice! One more question."
                      then: quiz-encryption
                      set: [ 'completed.quiz.quantum' ]
                    - text:
                        en: "A way to keep things like passwords, messages, and bank details safe from hackers."
                      thenText: "That sounds like encryption... Try again."
                      then: quiz-quantum
            - id: quiz-encryption
              type: first
              items:
                - text:
                    en: "What is encryption?"
                  responses:
                    - text:
                        en: "When you write a message in really bad handwriting."
                      thenText: "Not quite... Try again."
                      then: quiz-encryption
                    - text:
                        en: "A way to keep things like passwords, messages, and bank details safe from hackers."
                      thenText: "Nice! Here's your QCard."
                      set: [ 'found.publish.qcard' ]
                    - text:
                        en: "When you hide your files in a seret vault deep underground"
                      thenText: "Not quite... Try again."
                      then: quiz-encryption
  exchange:
    npc: citizenPunk
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "Oh, hey, could you help me out, please? We’ve got a premium express package for the apartment complex down the street that must be delivered today, but our staff all called in sick."
              responses:
                - text:
                    en: "Sure, I can help out."
                  thenText:
                    en: "Thank you so much! Just so you know, the package only has a name, and no apartment number, but I'm sure you can figure it out."
                  set: [ 'quest.exchange.active' ]
                - text:
                    en: "Sorry, I don’t think I can do this. I’m not in the delivery business."
                  thenText:
                    en: "I understand. We'll try to find someone else."
    stages:
      - cond: 'found.exchange.person & found.exchange.carla & found.exchange.quartz'
        prompt:
          en: "Deliver the package!"
        target: citizenBraid
        dialogues:
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "I hear you have a package for me! I'm quite excited to open it, because it's entangled with a package my friend has."
                - text:
                    en: "Do you know what entanglement is?"
                  responses:
                    - text:
                        en: "When a ball of yarn has lots of knots in it."
                    - text:
                        en: "When the states of two objects are connected, even when separated by vast distances."
                      thenText:
                        en: "You really know your stuff! Exactly right, when I open this box, I'll instantly know someting about what's in my friend's box. Thanks for your help!"
                      set: [ 'op.love.3' ]
                  set: [ 'quest.exchange.done' ]
      - cond: 'found.exchange.person & found.exchange.carla & ^found.exchange.quartz'
        prompt:
          en: "Prove your new knowledge to the doorman."
        target: lawyer
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "So, what kind of search do you think would be most effective?"
                  responses:
                    - text:
                        en: "A very smart dog sniffing the package and leading us the right way."
                      thenText:
                        en: "I like this idea, can you find a dog nearby?"
                    - text:
                        en: "Shouting the name very loud."
                      thenText:
                        en: "...please don't, my ears are very sensitive."
                    - text:
                        en: "A quantum algorithm called Grover's Search"
                      then: quiz-grover
            - id: quiz-grover
              type: first
              items:
                - text:
                    en: "Oooh, sounds like you did your research, can you tell me how it works?"
                  responses:
                    - text:
                        en: "It checks every option simultaneously."
                      thenText:
                        en: "A lot of people think that! But it actually works a little differently..."
                        then: quiz-grover
                    - text:
                        en: "It takes a shorter path through the state space than a classical computer."
                      thenText:
                        en: "Nice! I'll run the search for you now. The recipient of your package should come down in a second."
                      set: [ 'found.exchange.quartz' ]
      - cond: 'found.exchange.person & ^found.exchange.carla & ^found.exchange.quartz'
        prompt:
          en: "Find out what kind of search algorithm can help you deliver this package."
        target: citizenBlue
        dialogues:
          citizenBlue:
            - type: sequence
              items:
                - text:
                    en: "Hey there, you look stressed, can I help you?"
                  responses:
                    - text:
                        en: "Yes, can I get a back massage?"
                      thenText:
                        en: "Sadly, I don't have that capacity."
                    - text:
                        en: "Yes, I'm trying to learn about a search algorithm."
                      thenText:
                        en: "Ah! Grover's search, a great new development. Imagine a space filled with options, this quantum algorithm can take a shorter path through the space than a classical computer. Like how a bird can take a shortcut in a city that a taxi-cab can't."
                      set: ['found.exchange.carla']
      - cond: '^found.exchange.person & ^found.exchange.carla & ^found.exchange.quartz'
        prompt:
          en: "Find the apartment complex."
        target: lawyer
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "Hey there. Delivering something? Just so you know, for the privacy of our residents, our mailboxes are labeled only by apartment numbers, not names."
                - text:
                    en: "Do you know which apartment you're delivering to?"
                  responses:
                    - text:
                        en: "The fanciest one."
                      thenText:
                        en: "I'm not sure which that is..."
                    - text:
                        en: "Oh no, I only have a name."
                      thenText:
                        en: "I have a special search program that matches names and numbers, but I'll only let you use it if you can tell me what it's called and how it works."
                      set: ['found.exchange.person']
ending:
  dialogue:
    - type: sequence
      items:
        - cond: 'COUNT("op.favor") >= 3'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: 'You found out about three types of mathematical research data. :love:'
        - cond: 'COUNT("op.favor") < 3'
          type: sequence
          items:
            - text:
                en: "You did not answer Felicia's questions."
        - cond: 'quest.publish.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: 'You created an ORCID iD and a Zenodo account. :love:'
        - cond: '^found.publish.orcid & ^found.publish.zenodo'
          type: sequence
          items:
            - text:
                en: "You did not complete Muhammad's quest."
        - cond: 'found.publish.orcid & ^found.publish.zenodo'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You created an ORCID iD but not a Zenodo account."
        - cond: 'quest.exchange.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You helped Carla to get the code from Muhammad. :love:"
        - cond: '^quest.exchange.done'
          type: sequence
          items:
            - text:
                en: "You did not complete Carla's quest."
        - cond: 'COUNT("op.quest") = 0'
          type: sequence
          items:
            - text:
                en: "You did not complete any of the three quests. Try again!"
        - cond: 'COUNT("op.quest") = 1'
          type: sequence
          items:
            - text:
                en: "You completed one of the three quests :love:."
        - cond: 'COUNT("op.quest") = 2'
          type: sequence
          items:
            - text:
                en: "You completed two of the three quests :love::love:."
        - cond: 'COUNT("op.quest") = 3'
          type: sequence
          items:
            - text:
                en: "Congratulations, you completed all of the three quests! :love::love::love:"
        - cond: 'COUNT("op.love") = 0'
          text:
            en: "You didn't find any of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 1'
          text:
            en: "You found one of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 2'
          text:
            en: "You found two of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 3'
          text:
            en: "You found three of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 4'
          text:
            en: "You found four of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 5'
          text:
            en: "You found five of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 6'
          text:
            en: "You found six of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 7'
          text:
            en: "You found seven of the eight :love: hidden in the dialogues."
        - cond: 'COUNT("op.love") = 8'
          text:
            en: "You found all of the eight :love: hidden in the dialogues."
